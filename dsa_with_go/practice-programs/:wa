package main

func bfs(adjMatrix [][]int, source int, needle int) []int {
	graph := adjMatrix
	n := len(adjMatrix)
	seen := make([]bool, n)
	prev := make([]int, n)

	for i := range prev {
		prev[i] = -1
	}

	seen[source] = true
	q := []int{source}

	for len(q) > 0 {
		curr := q[0]
		q = q[1:]

		if curr == needle {
			break
		}

		adjs := graph[curr]
		for i := 0; i < len(adjs); i++ {
			if adjs[i] == 0 {
				continue
			}

			if seen[i] {
				continue
			}
			seen[i] = true
			prev[i] = curr
			q = append(q, i)

		}
	}

	curr := needle
	out := []int{}

}
